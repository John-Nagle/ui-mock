Notes for ui-mock

2022-06-08

Works under Linux.
Works under Wine 7.0.
Worked on Windows 10.

Still working towards a clean screen.
- Going full screen does not work under Wine. Program aborts. Wine bug. Must report.
- Can't tell if screen is maximized under Winit on Linux. Documented missing feature.

Test icon still does not have a transparent backgroupd.

TODO: Make ESC button restore menus from clean screen.
TODO: Dark mode.
TODO: Static string caching for internationalization.

Still don't have a way to build an .msi installer under Linux. Filed Rust feature request.

2022-06-13

Menu plan, initial version:

Avatar
- Preferences
- Exit

Comm
- Empty for now

Build
- Empty for now


World
- Teleport home
- Teleport to (dialog)

Help
- About
- Help page

Developer
- Load replay file
- Save replay file
- Show statistics
- Show logging window
- Set log message level


Buttons
- Chat window
- Look
- Walk/Run/Fly
- Clothing (empty for now)
- Inventory (empty for now)

2022-06-20 

CF on Tracy problems.

06/15/2022
you either need tracy-client 0.13 and tracy 0.7.8 or you can patch profiling to git, which has tracy-client 0.14
oh sorry, got versions confused you need to depend on tracy-client 0.13
setzer22BOT
 — 
06/15/2022
oh, okay. In my case going to 0.13 is not an issue at all. I just looked the most recent version on crates.io and found it to be 0.14 so I chose that one
cwfitzgeraldBOT
 — 
06/15/2022
yeah, 0.12 -> 0.13 changed which version of tracy you needed
or something
imbrisBOT
 — 

2022-06-20

Tracy working.

Main program:

fn main() {
    #[cfg(feature = "tracy")]
    let _client = tracy_client::Client::start();    // enable profiler if "tracy" feature is on
    
Cargo.toml:
    
[features]
#   Feature "tracy" enables profiing with Tracy
tracy = ["tracy-client", "profiling/profile-with-tracy"]

[dependencies]
tracy-client = {version = "0.13", optional = true }
profiling = { version = "1", default-features = false }

Tracy-release (the profiler tool): 0.8.1

Build command:

cargo build --features tracy --release

2020-06-21

Message window is scrolling OK.

TODO before merge.
- Everything needed for playback  
  - Open playback file
  - Set log level.  [DONE]
  - General purpose popup dialogs. [DONE]
  - Make "Help" failure non-fatal. [DONE]
  
2022-06-23

Looking ahead:
   System states:
      START- not doing anything with 3D.
        -> LOGIN, REPLAY, EXIT
      LOGIN -> Login screen is up
        -> CONNECTED,
      CONNECTED - connected to remote 
        -> SHUTDOWN
      REPLAY - replaying from a file
        -> SHUTDOWN
      SHUTDOWN - cleaning up.
        -> START
      EXIT - Final exit

  Implemented "OK" box with msg. Need to rethink how closing works.[DONE]
  
  2022-06-24
  
     enum MainState{
     }
  
     Need a user event type for the main event queue.
     enum GuiEvent {
        OpenReplay(String),
        SaveReplay(String),
        Login(ConnectInfo),
        Quit
    }
    
    Initial button set
    
    Chat (opens chat window if closed)
    Walk/Run/Fly/Sit/TP (unimplemented message)
    Messages (opens message console window if closed)
    Inventory (unimplemented)
    Clothing (unimplemented)
    
2022-06-26

TODO:
   1. Grid selection and login mockup.
   2. State machine to enable and disable menus.
   3. Return results from menus via winit events.
   4. Do something about file picker going to background?
    
    
    
